<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <Nullable>enable</Nullable>
        <IsPackable>true</IsPackable>
        <ImplicitUsings>enable</ImplicitUsings>
        <IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="..\Application\Application.csproj" />
        <ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
    </ItemGroup>

    <ItemGroup>
        <InternalsVisibleTo Include="Application.IntegrationTests" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="7.0.4">
            <TreatAsUsed>true</TreatAsUsed>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="7.0.4">
            <TreatAsUsed>true</TreatAsUsed>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="7.0.4">
            <TreatAsUsed>true</TreatAsUsed>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.4">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <TreatAsUsed>true</TreatAsUsed>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="7.0.4" />
        <PackageReference Include="NSwag.AspNetCore" Version="13.18.2" />
        <PackageReference Include="NSwag.MSBuild" Version="13.18.2">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="ZymLabs.NSwag.FluentValidation.AspNetCore" Version="0.6.2" />
    </ItemGroup>


    <!-- Auto-generated Open API specification and Angular TypeScript clients -->
    <PropertyGroup>
        <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
    </PropertyGroup>

    <Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' ">
        <Exec ConsoleToMSBuild="true" ContinueOnError="true" WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" Command="$(NSwagExe_Net70) run /variables:Configuration=$(Configuration)">
            <Output TaskParameter="ExitCode" PropertyName="NSwagExitCode" />
            <Output TaskParameter="ConsoleOutput" PropertyName="NSwagOutput" />
        </Exec>

        <Message Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' == '0'" Importance="low" />
        <Error Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' != '0'" />
    </Target>

    <Target Name="MakeItGenericAgain" AfterTargets="NSwag" Condition=" '$(Configuration)' == 'Debug' ">
        <PropertyGroup>
            <FilePath>$(SolutionDir)src\HttpClients\NSwagClients.g.cs</FilePath>
        </PropertyGroup>
        <WriteLinesToFile File="$(FilePath)"
                          Lines="$([System.Text.RegularExpressions.Regex]::Replace($([System.IO.File]::ReadAllText('$(FilePath)')), '([a-zA-Z\d]+)Of([a-zA-Z\d]+)', '$1&lt;$2&gt;'))"
                          Overwrite="true" />
    </Target>
</Project>
